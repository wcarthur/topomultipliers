import unittest
import numpy as np
from numpy.testing import assert_almost_equal

import multiplier_calc
import findpeaks
import findvalleys
import Mh

class TestFindPeaks(unittest.TestCase):

    def setUp(self):
        # A single line of elevation data to use in the tests:
        self.line = np.array([236.,231.,199.,171.,152.,159.,162.,124.,106.,98.,89.,83.,\
                              83.,78.,73.,73.,74.,75.,76.,76.,75.,77.,79.,77.,80.,80.,\
                              80.,80.,79.,81.,79.,75.,79.,80.,82.,86.,86.,86.,85.,85.,\
                              87.,87.,86.,83.,85.,81.,77.,87.,91.,88.,92.,94.,100.,102.,\
                              118.,152.,161.,163.,159.,150.,146.,130.,120.,116.,106.,97.,\
                              96.,95.,93.,95.,92.,95.,95.,95.,100.,101.,96.,94.,98.,98.,\
                              95.,96.,90.,84.,78.,70.,66.,64.,66.,76.,81.,91.,90.,91.,95.,\
                              98.,100.,101.,103.,102.,99.,100.,104.,107.,116.,126.,143.,\
                              154.,168.,176.,157.,128.,129.,132.,142.,151.,154.,162.,169.,\
                              167.,175.,182.,199.,219.,240.,255.,275.,285.,285.,297.,306.,\
                              318.,333.,342.,346.,346.,333.,327.,329.,323.,311.,313.,324.,\
                              322.,317.,314.,320.,316.,326.,331.,335.,326.,321.,319.,346.,\
                              340.,333.,340.,317.,301.,296.,321.,314.,329.,328.,336.,328.,\
                              317.,326.,317.,311.,307.,283.,271.,271.,258.,253.,266.,270.,\
                              262.,235.,207.,207.,198.,191.,200.,211.,208.,188.,173.,175.,\
                              163.,161.,161.,156.,157.,157.,149.,147.,152.,150.,147.,145.,\
                              149.,145.,139.,135.,135.,134.,134.,135.,131.,132.])
        # Indices of ridges:
        self.ridge_index = np.array([0,6,18,22,24,29,35,40,44,48,57,69,71,75,78,81,91,98,\
                                     109,118,127,134,138,142,146,150,154,157,161,163,165,\
                                     168,178,186,190,195,199,203,210,212])
        # Indices of valleys
        self.valley_index = np.array([4,15,20,23,28,31,39,43,46,49,68,70,73,77,80,87,92,\
                                      100,111,119,128,137,140,145,147,153,156,160,162,\
                                      164,167,176,184,189,194,198,202,209,211])

    def test_findpeaks(self):
        ridge_ind = findpeaks.findpeaks(self.line)
        assert_almost_equal(self.ridge_index, ridge_ind)

    def test_findvalleys(self):
        valley_ind = findvalleys.findvalleys(self.line)
        assert_almost_equal(self.valley_index, valley_ind)

class TestMultiplierCalc(unittest.TestCase):

    def setUp(self):
        self.line = np.array([236.,231.,199.,171.,152.,159.,162.,124.,106.,98.,89.,83.,\
                              83.,78.,73.,73.,74.,75.,76.,76.,75.,77.,79.,77.,80.,80.,\
                              80.,80.,79.,81.,79.,75.,79.,80.,82.,86.,86.,86.,85.,85.,\
                              87.,87.,86.,83.,85.,81.,77.,87.,91.,88.,92.,94.,100.,102.,\
                              118.,152.,161.,163.,159.,150.,146.,130.,120.,116.,106.,97.,\
                              96.,95.,93.,95.,92.,95.,95.,95.,100.,101.,96.,94.,98.,98.,\
                              95.,96.,90.,84.,78.,70.,66.,64.,66.,76.,81.,91.,90.,91.,95.,\
                              98.,100.,101.,103.,102.,99.,100.,104.,107.,116.,126.,143.,\
                              154.,168.,176.,157.,128.,129.,132.,142.,151.,154.,162.,169.,\
                              167.,175.,182.,199.,219.,240.,255.,275.,285.,285.,297.,306.,\
                              318.,333.,342.,346.,346.,333.,327.,329.,323.,311.,313.,324.,\
                              322.,317.,314.,320.,316.,326.,331.,335.,326.,321.,319.,346.,\
                              340.,333.,340.,317.,301.,296.,321.,314.,329.,328.,336.,328.,\
                              317.,326.,317.,311.,307.,283.,271.,271.,258.,253.,266.,270.,\
                              262.,235.,207.,207.,198.,191.,200.,211.,208.,188.,173.,175.,\
                              163.,161.,161.,156.,157.,157.,149.,147.,152.,150.,147.,145.,\
                              149.,145.,139.,135.,135.,134.,134.,135.,131.,132.])

        self.output = np.array([ 1.,1.,1.,1.,1.,1.02654279,1.0868673,1.,1.,1.,1.,1.,1.,1.,1.,\
                                 1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,\
                                 1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.0371599,1.12161422,\
                                 1.08922078,1.05682734,1.02443391,1.02149061,1.04976772,\
                                 1.07804484,1.10632195,1.13459907,1.16287619,1.13891253,\
                                 1.11494887,1.09098521,1.06702156,1.0430579,1.01909424,1.,1.,\
                                 1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,\
                                 1.,1.,1.,1.03583276,1.07655181,1.11727085,1.1031758,1.08908074,\
                                 1.07498569,1.06089064,1.04679558,1.03270053,1.01860547,\
                                 1.00451042,1.,1.,1.,1.01101034,1.03394855,1.05688676,\
                                 1.07982497,1.10276318,1.12570139,1.1486396,1.13893497,\
                                 1.12923035,1.11952572,1.10982109,1.10011646,1.09041184,\
                                 1.08070721,1.08156859,1.10175884,1.09502875,1.08829867,\
                                 1.08156859,1.07483851,1.07830122,1.12279055,1.16727987,\
                                 1.2117692,1.25625853,1.24142876,1.22659898,1.2117692,1.19693943,\
                                 1.18210965,1.16727987,1.17663017,1.15168934,1.1267485,\
                                 1.10796077,1.09313099,1.07830122,1.06347144,1.04864167,\
                                 1.11292749,1.06658729,1.0202471,1.,1.,1.,1.00815051,1.05909121,\
                                 1.11003191,1.06884581,1.02765972,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,\
                                 1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.04512274,1.14767441,\
                                 1.,1.,1.,1.,1.,1.,1.05308557,1.1737346,1.01805843,1.,1.,1.,1.,\
                                 1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.])

        self.data_spacing = 91.363586
        
    def test_multipliercalc(self):
        M = multiplier_calc.multiplier_calc(self.line, self.data_spacing)
        assert_almost_equal(M[:,0], self.output)


if __name__ == "__main__":
    unittest.main()
